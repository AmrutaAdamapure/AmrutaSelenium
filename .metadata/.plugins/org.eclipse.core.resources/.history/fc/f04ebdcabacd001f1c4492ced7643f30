package Basic;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SocialMediaTracker{
    public static void main(String[] args) {
        // Set the path for the ChromeDriver
       // System.setProperty("webdriver.chrome.driver", "path/to/chromedriver"); // Update this path

        // Initialize WebDriver
        WebDriver driver = new ChromeDriver();

        try {
            // Step 1: Navigate to Instagram login page
            driver.get("https://www.instagram.com/accounts/login/");

            // Wait for the login page to load
            Thread.sleep(2000);

            // Step 2: Log in to Instagram
            WebElement usernameField = driver.findElement(By.name("username"));
            WebElement passwordField = driver.findElement(By.name("password"));
            usernameField.sendKeys("findme_7107"); // Replace with your username
            passwordField.sendKeys("findme@7107"); // Replace with your password
            passwordField.submit();

            // Wait for the main page to load
            Thread.sleep(5000);

            // Step 3: Navigate to the user's profile
            String userId = "7_om_5402"; // Replace with the user ID you want to track
            driver.get("https://www.instagram.com/" + userId + "/");

            // Wait for the profile page to load
            Thread.sleep(10000);

            // Step 4: Get total posts
            String totalPostsText = driver.findElement(By.xpath("//header//section[3]//li[1]//span")).getText();
            int totalPosts = Integer.parseInt(totalPostsText.replace(",", ""));
            System.out.println("Total Posts: " + totalPosts);
            
            Thread.sleep(2000);
            String totalFollowers = driver.findElement(By.xpath("//*[@id=\"mount_0_0_5N\"]/div/div/div[2]/div/div/div[1]/div[2]/div/div[1]/section/main/div/header/section[3]/ul/li[2]/div/a/span/span")).getText();
            int totalF = Integer.parseInt(totalFollowers.replace(",", ""));
            System.out.println(" " +totalFollowers);

            // Step 5: Click on the first post to start fetching likes
//            driver.findElement(By.className("_aagw")).click();
//
//            // Store likes counts
//            Map<String, Integer> postLikes = new HashMap<>();
//            String highestPost = null;
//            int highestLikes = 0;
//
//            // Step 6: Loop through each post
//            // Extract and print the text of each like element
//          for (int i = 0; i < totalPosts; i++) 
//          {
//        	  WebElement likeElements = driver.findElement(By.cssSelector("span.x193iq5w.xeuugli.x1fj9vlw.x13faqbe.x1vvkbs.xt0psk2.x1i0vuye.xvs91rp.x1s688f.x5n08af.x10wh9bi.x1wdrske.x8viiok.x18hxmgj"));
//        	  System.out.println(likeElements.getText());
//        	  Thread.sleep(2000);
//        	  driver.findElement(By.cssSelector("body > div.x1n2onr6.xzkaem6 > div.x9f619.x1n2onr6.x1ja2u2z > div > div.x160vmok.x10l6tqk.x1eu8d0j.x1vjfegm > div")).click();
//          } 

            // Step 7: Print the post with the highest likes
            //System.out.println("Post with the highest likes: " + highestPost + " with " + highestLikes + " likes.");

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // Close the browser
//            driver.quit();
        }
    }

    // Helper method to parse likes count from the text
    private static int parseLikesCount(String likesText) 
    {
        if (likesText.contains("k")) 
        {
            return (int) (Double.parseDouble(likesText.replace("k", "").replace(",", "").trim()) * 1000);
        } else if (likesText.contains("m")) 
        {
            return (int) (Double.parseDouble(likesText.replace("m", "").replace(",", "").trim()) * 1000000);
        } else {
            return Integer.parseInt(likesText.replace(",", "").trim());
        }
    }
}